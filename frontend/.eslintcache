[{"C:\\FYP\\Ecommerse\\frontend\\src\\index.js":"1","C:\\FYP\\Ecommerse\\frontend\\src\\App.js":"2","C:\\FYP\\Ecommerse\\frontend\\src\\Routes.js":"3","C:\\FYP\\Ecommerse\\frontend\\src\\core\\Home.js":"4","C:\\FYP\\Ecommerse\\frontend\\src\\user\\Signin.js":"5","C:\\FYP\\Ecommerse\\frontend\\src\\user\\Signup.js":"6","C:\\FYP\\Ecommerse\\frontend\\src\\core\\Menu.js":"7","C:\\FYP\\Ecommerse\\frontend\\src\\config.js":"8","C:\\FYP\\Ecommerse\\frontend\\src\\assets\\css\\CssVariables.js":"9","C:\\FYP\\Ecommerse\\frontend\\src\\auth\\index.js":"10","C:\\FYP\\Ecommerse\\frontend\\src\\components\\ServeImage.js":"11","C:\\FYP\\Ecommerse\\frontend\\src\\core\\ProductsByCategory.js":"12","C:\\FYP\\Ecommerse\\frontend\\src\\core\\CategoryCard.js":"13","C:\\FYP\\Ecommerse\\frontend\\src\\core\\ProductCard.js":"14","C:\\FYP\\Ecommerse\\frontend\\src\\components\\ServeBackgroundImage.js":"15","C:\\FYP\\Ecommerse\\frontend\\src\\core\\Footer.js":"16","C:\\FYP\\Ecommerse\\frontend\\src\\core\\SuccessfulPayment.js":"17","C:\\FYP\\Ecommerse\\frontend\\src\\core\\Cart.js":"18","C:\\FYP\\Ecommerse\\frontend\\src\\core\\FailedPayment.js":"19","C:\\FYP\\Ecommerse\\frontend\\src\\context\\AppStateProvider.js":"20","C:\\FYP\\Ecommerse\\frontend\\src\\auth\\AdminRoute.js":"21","C:\\FYP\\Ecommerse\\frontend\\src\\admin\\Dashboard.js":"22","C:\\FYP\\Ecommerse\\frontend\\src\\core\\ForgotPassword.js":"23","C:\\FYP\\Ecommerse\\frontend\\src\\core\\ResetPassword.js":"24","C:\\FYP\\Ecommerse\\frontend\\src\\admin\\CategoryDetails.js":"25","C:\\FYP\\Ecommerse\\frontend\\src\\admin\\ProductDetails.js":"26","C:\\FYP\\Ecommerse\\frontend\\src\\admin\\ManageProducts.js":"27"},{"size":199,"mtime":1618036485546,"results":"28","hashOfConfig":"29"},{"size":259,"mtime":1624456650544,"results":"30","hashOfConfig":"29"},{"size":2598,"mtime":1624461690529,"results":"31","hashOfConfig":"29"},{"size":2067,"mtime":1624026299703,"results":"32","hashOfConfig":"29"},{"size":9158,"mtime":1624460871813,"results":"33","hashOfConfig":"29"},{"size":9695,"mtime":1624038475886,"results":"34","hashOfConfig":"29"},{"size":5128,"mtime":1624380708611,"results":"35","hashOfConfig":"29"},{"size":116,"mtime":1624026759358,"results":"36","hashOfConfig":"29"},{"size":75,"mtime":1618057965524,"results":"37","hashOfConfig":"29"},{"size":226,"mtime":1618166767131,"results":"38","hashOfConfig":"29"},{"size":337,"mtime":1619881602473,"results":"39","hashOfConfig":"29"},{"size":2815,"mtime":1623583844216,"results":"40","hashOfConfig":"29"},{"size":1293,"mtime":1620199887147,"results":"41","hashOfConfig":"29"},{"size":7712,"mtime":1624026848182,"results":"42","hashOfConfig":"29"},{"size":329,"mtime":1619879703251,"results":"43","hashOfConfig":"29"},{"size":1752,"mtime":1620200103227,"results":"44","hashOfConfig":"29"},{"size":584,"mtime":1623687378196,"results":"45","hashOfConfig":"29"},{"size":3713,"mtime":1623994235424,"results":"46","hashOfConfig":"29"},{"size":479,"mtime":1623435733152,"results":"47","hashOfConfig":"29"},{"size":391,"mtime":1623500250830,"results":"48","hashOfConfig":"29"},{"size":573,"mtime":1623945198305,"results":"49","hashOfConfig":"29"},{"size":3516,"mtime":1624454084065,"results":"50","hashOfConfig":"29"},{"size":6134,"mtime":1624163896627,"results":"51","hashOfConfig":"29"},{"size":6726,"mtime":1624165373122,"results":"52","hashOfConfig":"29"},{"size":8533,"mtime":1624375149993,"results":"53","hashOfConfig":"29"},{"size":19790,"mtime":1624471217536,"results":"54","hashOfConfig":"29"},{"size":3673,"mtime":1624473498886,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1cng5o7",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\FYP\\Ecommerse\\frontend\\src\\index.js",[],["122","123"],"C:\\FYP\\Ecommerse\\frontend\\src\\App.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\Routes.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\core\\Home.js",["124","125","126"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport banner1 from \"../assets/img/banner1.png\";\r\nimport banner2 from \"../assets/img/banner2.png\";\r\nimport banner3 from \"../assets/img/banner3.png\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../config\";\r\nimport { withRouter } from \"react-router\";\r\nimport CategoryCard from \"./CategoryCard\";\r\n\r\nconst Home = ({ history }) => {\r\n  const [categories, setCategories] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      console.log(API);\r\n      const response = await axios.get(`${API}/categories`);\r\n      setCategories(response.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      {categories && (\r\n        <Container fluid style={{ padding: 0 }}>\r\n          <Carousel\r\n            autoPlay={true}\r\n            infiniteLoop={true}\r\n            showThumbs={false}\r\n            transitionTime={3000}\r\n            stopOnHover={true}\r\n            interval={5500}\r\n          >\r\n            <div>\r\n              <img src={banner1} />\r\n            </div>\r\n            <div>\r\n              <img src={banner2} />\r\n            </div>\r\n            <div>\r\n              <img src={banner3} />\r\n            </div>\r\n          </Carousel>\r\n          <Container style={{ marginTop: 20 }}>\r\n            <Row>\r\n              <Col sm={12}>\r\n                <h1 className=\"home-category-heading\">Categories</h1>\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginBottom: 20 }}>\r\n              {categories.map((category, index) => (\r\n                <Col key={index} style={{ marginBottom: 30 }} sm={4}>\r\n                  <CategoryCard category={category} />\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </Container>\r\n        </Container>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(Home);\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\user\\Signin.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\user\\Signup.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\core\\Menu.js",["127","128","129"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Nav, NavbarBrand, NavItem } from \"reactstrap\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../config\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport NavbarLogo from \"../assets/img/Capture.PNG\";\r\nimport { HiShoppingCart } from \"react-icons/hi\";\r\nimport { AppStateContext } from \"../context/AppStateProvider\";\r\n\r\nconst isActive = (history, path) => {\r\n  if (history.location.pathname === path) {\r\n    return \"#ff9900\";\r\n  } else {\r\n    return \"aliceblue\";\r\n  }\r\n};\r\n\r\nconst Menu = ({ history }) => {\r\n  const [cartItems, setCartItems] = useState(0);\r\n  const { cartChanged, setCartChanged } = useContext(AppStateContext);\r\n  const handleSignOut = async () => {\r\n    try {\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"user\");\r\n      localStorage.removeItem(\"cart\");\r\n      setCartItems(0);\r\n      const response = await axios.get(API + \"/signout\");\r\n      if (response.data.systemMessageType === \"success\") {\r\n        NotificationManager.success(\r\n          \"You have successfully logged out\",\r\n          \"Success\",\r\n          3000\r\n        );\r\n      } else {\r\n        NotificationManager.error(response.data.systemMessage, \"Error\", 3000);\r\n      }\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        error.response.data.systemMessage,\r\n        \"Error\",\r\n        3000\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      if (localStorage.getItem(\"cart\")) {\r\n        const cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n        console.log(cart);\r\n        setCartItems(cart.length);\r\n        if (cartChanged) {\r\n          const user = JSON.parse(localStorage.getItem(\"user\"));\r\n          user.history[0].cart = cart;\r\n          localStorage.setItem(\"user\", JSON.stringify(user));\r\n          console.log({ history: [...user.history] });\r\n          axios.put(\r\n            `${API}/user/${user._id}`,\r\n            { history: [...user.history] },\r\n            {\r\n              headers: {\r\n                Authorization: `${localStorage.getItem(\"token\")}`,\r\n              },\r\n            }\r\n          );\r\n          console.log(\"cart updated in database\");\r\n        }\r\n      }\r\n    }\r\n    setCartChanged(false);\r\n  }, [[], cartChanged]);\r\n\r\n  return (\r\n    <Navbar\r\n      collapseOnSelect\r\n      expand=\"lg\"\r\n      variant=\"dark\"\r\n      className=\"navbar-custom\"\r\n    >\r\n      <NavbarBrand href=\"/\">\r\n        <img src={NavbarLogo} height=\"50px\" />\r\n      </NavbarBrand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse\r\n        id=\"responsive-navbar-nav\"\r\n        style={{ justifyContent: \"flex-end\" }}\r\n      >\r\n        <Nav>\r\n          <NavItem className=\"item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/home\"\r\n              style={{ color: isActive(history, \"/home\") }}\r\n            >\r\n              Home\r\n            </Link>\r\n          </NavItem>\r\n          {!isAuthenticated() ? (\r\n            <>\r\n              <NavItem className=\"item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/signin\"\r\n                  style={{ color: isActive(history, \"/signin\") }}\r\n                >\r\n                  Sign In\r\n                </Link>\r\n              </NavItem>\r\n              <NavItem className=\"item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/signup\"\r\n                  style={{ color: isActive(history, \"/signup\") }}\r\n                >\r\n                  Sign Up\r\n                </Link>\r\n              </NavItem>\r\n            </>\r\n          ) : (\r\n            <>\r\n              {JSON.parse(localStorage.getItem(\"user\")).role === 1 && (\r\n                <NavItem className=\"item\">\r\n                  <Link\r\n                    className=\"nav-link\"\r\n                    to=\"/admin/dashboard\"\r\n                    style={{ color: isActive(history, \"/admin/dashboard\") }}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                </NavItem>\r\n              )}\r\n              <NavItem className=\"item\">\r\n                <Link className=\"nav-link\" to=\"/signin\" onClick={handleSignOut}>\r\n                  SignOut\r\n                </Link>\r\n              </NavItem>\r\n\r\n              <NavItem className=\"item\">\r\n                <Link className=\"nav-link\" to=\"/cart\">\r\n                  <HiShoppingCart fill={isActive(history, \"/cart\")} size={30} />\r\n                  <sup>\r\n                    <small\r\n                      style={{ color: isActive(history, \"/cart\") }}\r\n                      className=\"cart-badge\"\r\n                    >\r\n                      {cartItems}\r\n                    </small>\r\n                  </sup>\r\n                </Link>\r\n              </NavItem>\r\n            </>\r\n          )}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default withRouter(Menu);\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\config.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\assets\\css\\CssVariables.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\auth\\index.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\components\\ServeImage.js",["130"],"import React from \"react\";\r\nimport { API } from \"../config\";\r\n\r\nconst ServeImage = ({ item, type, style }) => {\r\n  return (\r\n    <div className=\"product-image\">\r\n      <img\r\n        src={`${API}/${type}/photo/${item._id}`}\r\n        style={{\r\n          ...style,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServeImage;\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\core\\ProductsByCategory.js",["131"],"import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../config\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport Slider from \"react-rangeslider\";\r\nimport \"react-rangeslider/lib/index.css\";\r\n\r\nconst ProductsByCategory = (props) => {\r\n  const category = props.location.state.category;\r\n  const [products, setProducts] = useState(null);\r\n  const [filteredProducts, setFilteredProducts] = useState(null);\r\n  const [volume, setVolume] = useState(0);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await axios.get(\r\n        `${API}/products/category/${category._id}`\r\n      );\r\n      setProducts(response.data);\r\n      setFilteredProducts(response.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function filterProducts(product) {\r\n    return product.price <= this;\r\n  }\r\n\r\n  const handleOnChange = (value) => {\r\n    console.log(value);\r\n    setVolume(value);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {filteredProducts && (\r\n        <Container>\r\n          <Row>\r\n            <Col sm={12}>\r\n              <h1 className=\"product-by-category-heading\">{category.name}</h1>\r\n            </Col>\r\n            <Col md={{ span: 4, offset: 8 }}>\r\n              <h5 className=\"filter-heading\">Price</h5>\r\n            </Col>\r\n            <Col md={{ span: 4, offset: 8 }} style={{ marginBottom: 10 }}>\r\n              <Slider\r\n                style={{ background: \"white\" }}\r\n                value={volume}\r\n                min={0}\r\n                max={2000}\r\n                step={100}\r\n                orientation=\"horizontal\"\r\n                onChange={handleOnChange}\r\n                onChangeComplete={() => {\r\n                  const temp = products.filter(filterProducts, volume);\r\n                  setFilteredProducts(temp);\r\n                }}\r\n              />\r\n            </Col>\r\n            {filteredProducts.length > 0 ? (\r\n              <>\r\n                {filteredProducts.map((product, index) => (\r\n                  <Col key={index} sm={12} style={{ marginBottom: 30 }}>\r\n                    <ProductCard product={product} />\r\n                  </Col>\r\n                ))}\r\n              </>\r\n            ) : (\r\n              <Container>\r\n                <Row>\r\n                  <Col>\r\n                    <h3 style={{ textAlign: \"center\", color: \"white\" }}>\r\n                      Sorry, no items match your filter. <br /> Please try\r\n                      again.\r\n                    </h3>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            )}\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProductsByCategory);\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\core\\CategoryCard.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\core\\ProductCard.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\components\\ServeBackgroundImage.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\core\\Footer.js",["132"],"import React from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport COLORS from \"../assets/css/CssVariables\";\r\nimport NavbarLogo from \"../assets/img/Capture.PNG\";\r\nimport { FaFacebookF } from \"react-icons/fa\";\r\nimport { GrInstagram } from \"react-icons/gr\";\r\nimport { AiOutlineTwitter } from \"react-icons/ai\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ backgroundColor: COLORS.THEME_COLOR }}>\r\n        <Container style={{ paddingTop: 70, paddingBottom: 70 }}>\r\n          <Row>\r\n            <Col sm={3} style={{ textAlign: \"center\", alignSelf: \"center\" }}>\r\n              <img src={NavbarLogo} height={80} />\r\n            </Col>\r\n            <Col sm={3}>\r\n              <h3 className=\"footer-heading\">Contact us:</h3>\r\n              <h5 className=\"footer\">+91-9834693773</h5>\r\n              <h5 className=\"footer\">info@bookyourbooks.com</h5>\r\n              <h5 className=\"footer\">Company Address</h5>\r\n            </Col>\r\n            <Col sm={3}>\r\n              <h3 className=\"footer-heading\">Useful Links</h3>\r\n              <h5 className=\"footer\">Novels</h5>\r\n              <h5 className=\"footer\">Engineering</h5>\r\n              <h5 className=\"footer\">Exam Central</h5>\r\n            </Col>\r\n            <Col sm={3}>\r\n              <h3 className=\"footer-heading\">Social Media</h3>\r\n              <FaFacebookF fill=\"white\" size={30} />\r\n              <GrInstagram\r\n                fill=\"white\"\r\n                size={30}\r\n                style={{ marginLeft: 20, marginRight: 20 }}\r\n              />\r\n              <AiOutlineTwitter fill=\"white\" size={30} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\core\\SuccessfulPayment.js",["133"],"import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport paymentSuccess from \"../assets/img/paymentsuccess.png\";\r\n\r\nconst SuccessfulPayment = ({ history }) => {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col md={{ span: 8, offset: 3 }}>\r\n          <img\r\n            src={paymentSuccess}\r\n            width=\"75%\"\r\n            style={{ marginTop: 50, marginBottom: 50 }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(SuccessfulPayment);\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\core\\Cart.js",["134","135","136","137","138"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport Slider from \"react-rangeslider\";\r\nimport \"react-rangeslider/lib/index.css\";\r\nimport { AppStateContext } from \"../context/AppStateProvider\";\r\nimport { Button } from \"reactstrap\";\r\nimport COLORS from \"../assets/css/CssVariables\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport axios from \"axios\";\r\nimport { API, PK } from \"../config\";\r\n\r\nconst Cart = ({ history }) => {\r\n  const [products, setProducts] = useState(null);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [volume, setVolume] = useState(0);\r\n  const { cartChanged, setCartChanged } = useContext(AppStateContext);\r\n  const stripePromise = loadStripe(PK);\r\n\r\n  useEffect(() => {\r\n    console.log(\"cart updated in database\");\r\n    let cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n    setProducts(cart);\r\n    setFilteredProducts(cart);\r\n  }, [cartChanged]);\r\n\r\n  function filterProducts(product) {\r\n    return product.price <= this;\r\n  }\r\n\r\n  const handleOnChange = (value) => {\r\n    console.log(value);\r\n    setVolume(value);\r\n  };\r\n\r\n  const handleEmptyCart = () => {\r\n    let cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n    cart = [];\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    setCartChanged(true);\r\n  };\r\n\r\n  const handleBuyAll = async () => {\r\n    // Get Stripe.js instance\r\n    const stripe = await stripePromise;\r\n\r\n    const cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n\r\n    // Call your backend to create the Checkout Session\r\n    const response = await axios.post(`${API}/payment`, {\r\n      products: cart,\r\n    });\r\n    console.log(response);\r\n\r\n    const session = response.data;\r\n\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const result = await stripe.redirectToCheckout({\r\n      sessionId: session.id,\r\n    });\r\n\r\n    if (result.error) {\r\n      // If `redirectToCheckout` fails due to a browser or network\r\n      // error, display the localized error message to your customer\r\n      // using `result.error.message`.\r\n      history.push(\"/checkout/failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {filteredProducts.length > 0 ? (\r\n        <Container>\r\n          <Row>\r\n            <Col sm={12}>\r\n              <h2 className=\"cart-heading\">Here are your selected items</h2>\r\n            </Col>\r\n\r\n            {filteredProducts.map((product, index) => (\r\n              <Col key={index} sm={12} style={{ marginBottom: 30 }}>\r\n                <ProductCard product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Row>\r\n            <Col\r\n              md={{ span: 4, offset: 8 }}\r\n              style={{ marginBottom: 30, textAlign: \"end\" }}\r\n            >\r\n              <Button\r\n                style={{ background: COLORS.THEME_COLOR }}\r\n                onClick={handleEmptyCart}\r\n              >\r\n                Empty Cart\r\n              </Button>\r\n              <Button\r\n                style={{ background: COLORS.THEME_COLOR, marginLeft: 20 }}\r\n                onClick={handleBuyAll}\r\n              >\r\n                Buy All\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <h3 style={{ textAlign: \"center\", color: \"white\" }}>\r\n                Sorry, there are no items in your cart\r\n              </h3>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(Cart);\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\core\\FailedPayment.js",["139"],"import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport paymentFailed from \"../assets/img/paymentfailed.png\";\r\n\r\nconst FailedPayment = ({ history }) => {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col md={{ span: 8, offset: 3 }}>\r\n          <img src={paymentFailed} width=\"75%\" />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(FailedPayment);\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\context\\AppStateProvider.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\auth\\AdminRoute.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\admin\\Dashboard.js",["140","141"],"C:\\FYP\\Ecommerse\\frontend\\src\\core\\ForgotPassword.js",["142","143"],"import React, { useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Form, Formik, ErrorMessage } from \"formik\";\r\nimport { Mail } from \"react-feather\";\r\n\r\nimport \"../global.scss\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport COLORS from \"../assets/css/CssVariables\";\r\nimport { API } from \"../config\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst ForgotPassword = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"my-5\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col xl={10}>\r\n              <Card className=\"\">\r\n                <CardBody className=\"p-0\">\r\n                  <Row>\r\n                    <Col md={6} className=\"p-5 position-relative\">\r\n                      <div className=\"mx-auto mb-5\">\r\n                        <h3 className=\"d-inline align-middle ml-1 text-logo\">\r\n                          Forgot Password\r\n                        </h3>\r\n                      </div>\r\n\r\n                      <h6 className=\"h5 mb-0 mt-4\">Welcome back!</h6>\r\n                      <p className=\"text-muted mt-1 mb-4\">\r\n                        Enter your email address and follow the instructions to\r\n                        recover your account\r\n                      </p>\r\n                      <Formik\r\n                        initialValues={{\r\n                          email: \"\",\r\n                        }}\r\n                        validationSchema={Yup.object().shape({\r\n                          email: Yup.string()\r\n                            .required(\"Email is required\")\r\n                            .email(\"Enter a valid email\"),\r\n                        })}\r\n                        onSubmit={async (values, actions) => {\r\n                          try {\r\n                            const response = await axios.post(\r\n                              API + \"/forgot-password\",\r\n                              {\r\n                                email: values.email,\r\n                              }\r\n                            );\r\n                            console.log(response);\r\n                            if (response.data.systemMessageType === \"success\") {\r\n                              NotificationManager.success(\r\n                                response.data.systemMessage,\r\n                                \"Success\",\r\n                                3000\r\n                              );\r\n                            } else {\r\n                              NotificationManager.error(\r\n                                response.data.systemMessage,\r\n                                \"Error\",\r\n                                3000\r\n                              );\r\n                            }\r\n                          } catch (error) {\r\n                            NotificationManager.error(\r\n                              error.response.data.systemMessage,\r\n                              \"Error\",\r\n                              3000\r\n                            );\r\n                          }\r\n                        }}\r\n                        render={({ values, handleChange }) => (\r\n                          <Form>\r\n                            <FormGroup className=\"\">\r\n                              <Label for=\"username\">Email ID</Label>\r\n                              <InputGroup>\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                  <span className=\"input-group-text\">\r\n                                    <Mail className=\"icon-dual\" />\r\n                                  </span>\r\n                                </InputGroupAddon>\r\n                                <Input\r\n                                  onChange={handleChange}\r\n                                  name=\"email\"\r\n                                  id=\"username\"\r\n                                  placeholder=\"hello@coderthemes.com\"\r\n                                />\r\n                              </InputGroup>\r\n                              <ErrorMessage\r\n                                name={\"email\"}\r\n                                className=\"error\"\r\n                                component=\"div\"\r\n                              />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup className=\"form-group mb-0 text-center\">\r\n                              <Button\r\n                                style={{\r\n                                  background: COLORS.THEME_COLOR,\r\n                                  width: \"100%\",\r\n                                }}\r\n                                // onClick={this.SuperAdminHandler}\r\n                              >\r\n                                Recover Account\r\n                              </Button>\r\n                            </FormGroup>\r\n                          </Form>\r\n                        )}\r\n                      />\r\n                      {/* <p className=\"mt-3\">\r\n                        <strong>Username:</strong> test &nbsp;&nbsp;{\" \"}\r\n                        <strong>Password:</strong> test\r\n                      </p> */}\r\n                    </Col>\r\n\r\n                    <Col md={6} className=\"d-none d-md-inline-block\">\r\n                      <div className=\"auth-page-sidebar\">\r\n                        <div className=\"overlay\"></div>\r\n                        <div className=\"auth-user-testimonial\">\r\n                          {/* <p className=\"lead\">\r\n                            \"It's a elegent templete. I love it very much!\"\r\n                          </p> */}\r\n                          {/* <p>- Admin User</p> */}\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\core\\ResetPassword.js",["144","145"],"import React, { useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Form, Formik, ErrorMessage } from \"formik\";\r\nimport { Lock } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../global.scss\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport COLORS from \"../assets/css/CssVariables\";\r\nimport { API } from \"../config\";\r\nimport * as Yup from \"yup\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Signin = () => {\r\n  const history = useHistory();\r\n  const { token } = useParams();\r\n  console.log(token);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"my-5\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col xl={10}>\r\n              <Card className=\"\">\r\n                <CardBody className=\"p-0\">\r\n                  <Row>\r\n                    <Col md={6} className=\"p-5 position-relative\">\r\n                      <div className=\"mx-auto mb-5\">\r\n                        <h3 className=\"d-inline align-middle ml-1 text-logo\">\r\n                          Reset Password\r\n                        </h3>\r\n                      </div>\r\n\r\n                      <h6 className=\"h5 mb-0 mt-4\">Welcome back!</h6>\r\n                      <p className=\"text-muted mt-1 mb-4\">\r\n                        Please enter your new password and login with the same\r\n                        to book your favourite books\r\n                      </p>\r\n                      <Formik\r\n                        initialValues={{\r\n                          reset_password_link: token,\r\n                          password: \"\",\r\n                        }}\r\n                        validationSchema={Yup.object().shape({\r\n                          password: Yup.string()\r\n                            .required(\"Password is required\")\r\n                            .min(8, \"Minimum 8 characters\")\r\n                            .matches(\r\n                              /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n                              \"Password Must contain one oppercase, one lowercase, one number and one special case character\"\r\n                            )\r\n                            .max(20, \"Maximum 20 characters\"),\r\n                        })}\r\n                        onSubmit={async (values, actions) => {\r\n                          try {\r\n                            const response = await axios.post(\r\n                              API + \"/reset-password\",\r\n                              values\r\n                            );\r\n                            console.log(response);\r\n                            if (response.data.systemMessageType === \"success\") {\r\n                              NotificationManager.success(\r\n                                response.data.systemMessage,\r\n                                \"Success\",\r\n                                3000\r\n                              );\r\n                              history.push(\"/signin\");\r\n                            } else {\r\n                              NotificationManager.error(\r\n                                response.data.systemMessage,\r\n                                \"Error\",\r\n                                3000\r\n                              );\r\n                            }\r\n                          } catch (error) {\r\n                            NotificationManager.error(\r\n                              error.response.data.systemMessage,\r\n                              \"Error\",\r\n                              3000\r\n                            );\r\n                          }\r\n                        }}\r\n                        render={({ values, handleChange }) => (\r\n                          <Form>\r\n                            <FormGroup className=\"mb-3\">\r\n                              <Label for=\"password\">Password</Label>\r\n\r\n                              <InputGroup>\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                  <span className=\"input-group-text\">\r\n                                    <Lock className=\"icon-dual\" />\r\n                                  </span>\r\n                                </InputGroupAddon>\r\n                                <Input\r\n                                  onChange={handleChange}\r\n                                  type=\"password\"\r\n                                  name=\"password\"\r\n                                  id=\"password\"\r\n                                  placeholder=\"Enter your new password\"\r\n                                />\r\n                              </InputGroup>\r\n                              <ErrorMessage\r\n                                name={\"password\"}\r\n                                className=\"error\"\r\n                                component=\"div\"\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup className=\"form-group mb-0 text-center\">\r\n                              <Button\r\n                                style={{\r\n                                  background: COLORS.THEME_COLOR,\r\n                                  width: \"100%\",\r\n                                }}\r\n                                // onClick={this.SuperAdminHandler}\r\n                              >\r\n                                Reset Password\r\n                              </Button>\r\n                            </FormGroup>\r\n                          </Form>\r\n                        )}\r\n                      />\r\n                      {/* <p className=\"mt-3\">\r\n                        <strong>Username:</strong> test &nbsp;&nbsp;{\" \"}\r\n                        <strong>Password:</strong> test\r\n                      </p> */}\r\n                    </Col>\r\n\r\n                    <Col md={6} className=\"d-none d-md-inline-block\">\r\n                      <div className=\"auth-page-sidebar\">\r\n                        <div className=\"overlay\"></div>\r\n                        <div className=\"auth-user-testimonial\">\r\n                          {/* <p className=\"lead\">\r\n                            \"It's a elegent templete. I love it very much!\"\r\n                          </p> */}\r\n                          {/* <p>- Admin User</p> */}\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\admin\\CategoryDetails.js",["146","147","148","149","150"],"import React, { useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Form, Formik, ErrorMessage } from \"formik\";\r\nimport { ShoppingBag } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../global.scss\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport COLORS from \"../assets/css/CssVariables\";\r\nimport { API } from \"../config\";\r\nimport * as Yup from \"yup\";\r\nimport Image from \"../assets/img/image.svg\";\r\nimport { IoImageOutline } from \"react-icons/io5\";\r\n\r\nconst CreateCategory = ({ history }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"my-5\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col xl={10}>\r\n              <Card className=\"\">\r\n                <CardBody className=\"p-0\">\r\n                  <Row style={{ justifyContent: \"center\" }}>\r\n                    <Col md={6} className=\"p-5 position-relative\">\r\n                      <div className=\"mx-auto mb-5\">\r\n                        <h3 className=\"d-inline align-middle ml-1 text-logo\">\r\n                          Create Category\r\n                        </h3>\r\n                      </div>\r\n\r\n                      <h6 className=\"h5 mb-0 mt-4\">Hey There!</h6>\r\n                      <p className=\"text-muted mt-1 mb-4\">\r\n                        Create a category so that you could add books to it\r\n                        later.\r\n                      </p>\r\n                      <Formik\r\n                        initialValues={{\r\n                          name: \"\",\r\n                          image: \"\",\r\n                          photo: null,\r\n                        }}\r\n                        validationSchema={Yup.object().shape({\r\n                          name: Yup.string().required(\r\n                            \"Category name is required\"\r\n                          ),\r\n                          image: Yup.string().required(\"Image is required\"),\r\n                        })}\r\n                        onSubmit={async (values, actions) => {\r\n                          const user = JSON.parse(localStorage.getItem(\"user\"));\r\n                          const token = localStorage.getItem(\"token\");\r\n                          let formData = new FormData();\r\n                          formData.append(\"name\", values.name);\r\n                          formData.append(\"photo\", values.photo);\r\n                          try {\r\n                            const response = await axios.post(\r\n                              API + `/category/create/${user._id}`,\r\n                              formData,\r\n                              {\r\n                                headers: {\r\n                                  Authorization: token,\r\n                                },\r\n                              }\r\n                            );\r\n                            if (response.data.systemMessageType === \"success\") {\r\n                              history.push(\"/admin/create/product\");\r\n                              NotificationManager.success(\r\n                                \"Successfully created category. Now you can add Products to it.\",\r\n                                \"Success\",\r\n                                3000\r\n                              );\r\n                            } else {\r\n                              NotificationManager.error(\r\n                                response.data.systemMessage,\r\n                                \"Error\",\r\n                                3000\r\n                              );\r\n                            }\r\n                          } catch (error) {\r\n                            NotificationManager.error(\r\n                              error.response.data.systemMessage,\r\n                              \"Error\",\r\n                              3000\r\n                            );\r\n                          }\r\n                        }}\r\n                        render={({ values, handleChange, setFieldValue }) => (\r\n                          <Form style={{ width: \"100%\" }}>\r\n                            <FormGroup className=\"\">\r\n                              <Label for=\"image\">Category Image</Label>\r\n                              <InputGroup>\r\n                                <Label for=\"image\" style={{ width: \"100%\" }}>\r\n                                  {values.image === \"\" ? (\r\n                                    <IoImageOutline\r\n                                      size={50}\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                    />\r\n                                  ) : (\r\n                                    <img src={values.image} width=\"100%\" />\r\n                                  )}\r\n                                </Label>\r\n                                <Input\r\n                                  type=\"file\"\r\n                                  onChange={(event) => {\r\n                                    if (event.target.files.length > 0) {\r\n                                      setFieldValue(\r\n                                        \"image\",\r\n                                        URL.createObjectURL(\r\n                                          event.target.files[0]\r\n                                        )\r\n                                      );\r\n                                      setFieldValue(\r\n                                        \"photo\",\r\n                                        event.target.files[0]\r\n                                      );\r\n                                    }\r\n                                  }}\r\n                                  accept=\"image/*\"\r\n                                  name=\"image\"\r\n                                  id=\"image\"\r\n                                  style={{ display: \"none\" }}\r\n                                />\r\n                              </InputGroup>\r\n                              <ErrorMessage\r\n                                name={\"image\"}\r\n                                className=\"error\"\r\n                                component=\"div\"\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup className=\"\">\r\n                              <Label for=\"username\">Category Name</Label>\r\n                              <InputGroup>\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                  <span className=\"input-group-text\">\r\n                                    <ShoppingBag className=\"icon-dual\" />\r\n                                  </span>\r\n                                </InputGroupAddon>\r\n                                <Input\r\n                                  onChange={handleChange}\r\n                                  name=\"name\"\r\n                                  id=\"username\"\r\n                                  placeholder=\"Category Name\"\r\n                                />\r\n                              </InputGroup>\r\n                              <ErrorMessage\r\n                                name={\"name\"}\r\n                                className=\"error\"\r\n                                component=\"div\"\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup className=\"form-group mb-0 text-center\">\r\n                              <Button\r\n                                style={{\r\n                                  background: COLORS.THEME_COLOR,\r\n                                  width: \"100%\",\r\n                                }}\r\n                                // onClick={this.SuperAdminHandler}\r\n                              >\r\n                                Create Category\r\n                              </Button>\r\n                            </FormGroup>\r\n                          </Form>\r\n                        )}\r\n                      />\r\n                      {/* <p className=\"mt-3\">\r\n                        <strong>Username:</strong> test &nbsp;&nbsp;{\" \"}\r\n                        <strong>Password:</strong> test\r\n                      </p> */}\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(CreateCategory);\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\admin\\ProductDetails.js",["151","152","153","154"],"C:\\FYP\\Ecommerse\\frontend\\src\\admin\\ManageProducts.js",["155"],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":37,"column":15,"nodeType":"162","endLine":37,"endColumn":36},{"ruleId":"160","severity":1,"message":"161","line":40,"column":15,"nodeType":"162","endLine":40,"endColumn":36},{"ruleId":"160","severity":1,"message":"161","line":43,"column":15,"nodeType":"162","endLine":43,"endColumn":36},{"ruleId":"163","severity":1,"message":"164","line":74,"column":6,"nodeType":"165","endLine":74,"endColumn":23,"suggestions":"166"},{"ruleId":"163","severity":1,"message":"167","line":74,"column":7,"nodeType":"165","endLine":74,"endColumn":9},{"ruleId":"160","severity":1,"message":"161","line":84,"column":9,"nodeType":"162","endLine":84,"endColumn":47},{"ruleId":"160","severity":1,"message":"161","line":7,"column":7,"nodeType":"162","endLine":12,"endColumn":9},{"ruleId":"163","severity":1,"message":"168","line":25,"column":6,"nodeType":"165","endLine":25,"endColumn":8,"suggestions":"169"},{"ruleId":"160","severity":1,"message":"161","line":16,"column":15,"nodeType":"162","endLine":16,"endColumn":51},{"ruleId":"160","severity":1,"message":"161","line":11,"column":11,"nodeType":"162","endLine":15,"endColumn":13},{"ruleId":"170","severity":1,"message":"171","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":14},{"ruleId":"170","severity":1,"message":"174","line":15,"column":10,"nodeType":"172","messageId":"173","endLine":15,"endColumn":18},{"ruleId":"170","severity":1,"message":"175","line":17,"column":10,"nodeType":"172","messageId":"173","endLine":17,"endColumn":16},{"ruleId":"170","severity":1,"message":"176","line":28,"column":12,"nodeType":"172","messageId":"173","endLine":28,"endColumn":26},{"ruleId":"170","severity":1,"message":"177","line":32,"column":9,"nodeType":"172","messageId":"173","endLine":32,"endColumn":23},{"ruleId":"160","severity":1,"message":"161","line":11,"column":11,"nodeType":"162","endLine":11,"endColumn":50},{"ruleId":"170","severity":1,"message":"178","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":25},{"ruleId":"170","severity":1,"message":"179","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"180","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":27},{"ruleId":"170","severity":1,"message":"181","line":27,"column":9,"nodeType":"172","messageId":"173","endLine":27,"endColumn":16},{"ruleId":"170","severity":1,"message":"180","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":27},{"ruleId":"170","severity":1,"message":"182","line":19,"column":10,"nodeType":"172","messageId":"173","endLine":19,"endColumn":14},{"ruleId":"170","severity":1,"message":"179","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":26},{"ruleId":"170","severity":1,"message":"183","line":1,"column":28,"nodeType":"172","messageId":"173","endLine":1,"endColumn":34},{"ruleId":"170","severity":1,"message":"182","line":19,"column":10,"nodeType":"172","messageId":"173","endLine":19,"endColumn":14},{"ruleId":"170","severity":1,"message":"184","line":25,"column":8,"nodeType":"172","messageId":"173","endLine":25,"endColumn":13},{"ruleId":"160","severity":1,"message":"161","line":112,"column":37,"nodeType":"162","endLine":112,"endColumn":76},{"ruleId":"163","severity":1,"message":"185","line":73,"column":6,"nodeType":"165","endLine":73,"endColumn":8,"suggestions":"186"},{"ruleId":"163","severity":1,"message":"187","line":77,"column":13,"nodeType":"188","endLine":86,"endColumn":4},{"ruleId":"189","severity":1,"message":"190","line":81,"column":36,"nodeType":"188","messageId":"191","endLine":81,"endColumn":38},{"ruleId":"160","severity":1,"message":"161","line":246,"column":37,"nodeType":"162","endLine":246,"endColumn":76},{"ruleId":"163","severity":1,"message":"187","line":99,"column":13,"nodeType":"188","endLine":103,"endColumn":4},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCartChanged'. Either include it or remove the dependency array.","ArrayExpression",["194"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","React Hook useEffect has a missing dependency: 'category._id'. Either include it or remove the dependency array.",["195"],"no-unused-vars","'Slider' is defined but never used.","Identifier","unusedVar","'products' is assigned a value but never used.","'volume' is assigned a value but never used.","'filterProducts' is defined but never used.","'handleOnChange' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'history' is assigned a value but never used.","'Link' is defined but never used.","'useRef' is defined but never used.","'Image' is defined but never used.","React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.",["196"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [cartChanged, setCartChanged]",{"range":"203","text":"204"},"Update the dependencies array to be: [category._id]",{"range":"205","text":"206"},"Update the dependencies array to be: [location.state]",{"range":"207","text":"208"},[2438,2455],"[cartChanged, setCartChanged]",[865,867],"[category._id]",[2050,2052],"[location.state]"]