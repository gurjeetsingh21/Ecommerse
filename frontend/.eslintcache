[{"C:\\FYP\\Ecommerse\\frontend\\src\\index.js":"1","C:\\FYP\\Ecommerse\\frontend\\src\\App.js":"2","C:\\FYP\\Ecommerse\\frontend\\src\\Routes.js":"3","C:\\FYP\\Ecommerse\\frontend\\src\\core\\Home.js":"4","C:\\FYP\\Ecommerse\\frontend\\src\\user\\Signin.js":"5","C:\\FYP\\Ecommerse\\frontend\\src\\user\\Signup.js":"6","C:\\FYP\\Ecommerse\\frontend\\src\\core\\Menu.js":"7","C:\\FYP\\Ecommerse\\frontend\\src\\config.js":"8","C:\\FYP\\Ecommerse\\frontend\\src\\assets\\css\\CssVariables.js":"9","C:\\FYP\\Ecommerse\\frontend\\src\\auth\\index.js":"10","C:\\FYP\\Ecommerse\\frontend\\src\\components\\ServeImage.js":"11","C:\\FYP\\Ecommerse\\frontend\\src\\core\\ProductsByCategory.js":"12","C:\\FYP\\Ecommerse\\frontend\\src\\core\\CategoryCard.js":"13","C:\\FYP\\Ecommerse\\frontend\\src\\core\\ProductCard.js":"14","C:\\FYP\\Ecommerse\\frontend\\src\\components\\ServeBackgroundImage.js":"15","C:\\FYP\\Ecommerse\\frontend\\src\\core\\Footer.js":"16","C:\\FYP\\Ecommerse\\frontend\\src\\core\\SuccessfulPayment.js":"17","C:\\FYP\\Ecommerse\\frontend\\src\\core\\Cart.js":"18","C:\\FYP\\Ecommerse\\frontend\\src\\core\\FailedPayment.js":"19","C:\\FYP\\Ecommerse\\frontend\\src\\context\\AppStateProvider.js":"20","C:\\FYP\\Ecommerse\\frontend\\src\\auth\\AdminRoute.js":"21","C:\\FYP\\Ecommerse\\frontend\\src\\admin\\Dashboard.js":"22","C:\\FYP\\Ecommerse\\frontend\\src\\core\\ForgotPassword.js":"23","C:\\FYP\\Ecommerse\\frontend\\src\\core\\ResetPassword.js":"24","C:\\FYP\\Ecommerse\\frontend\\src\\admin\\CategoryDetails.js":"25","C:\\FYP\\Ecommerse\\frontend\\src\\admin\\ProductDetails.js":"26","C:\\FYP\\Ecommerse\\frontend\\src\\admin\\ManageProducts.js":"27","C:\\FYP\\Ecommerse\\frontend\\src\\user\\ShopRegistration.js":"28","C:\\FYP\\Ecommerse\\frontend\\src\\admin\\charts\\BarChart.js":"29","C:\\FYP\\Ecommerse\\frontend\\src\\core\\SearchResult.js":"30"},{"size":199,"mtime":1618036485546,"results":"31","hashOfConfig":"32"},{"size":259,"mtime":1624456650544,"results":"33","hashOfConfig":"32"},{"size":2864,"mtime":1625243100950,"results":"34","hashOfConfig":"32"},{"size":3014,"mtime":1627199605901,"results":"35","hashOfConfig":"32"},{"size":9956,"mtime":1625071533006,"results":"36","hashOfConfig":"32"},{"size":9695,"mtime":1624989903188,"results":"37","hashOfConfig":"32"},{"size":6257,"mtime":1625245300336,"results":"38","hashOfConfig":"32"},{"size":116,"mtime":1624026759358,"results":"39","hashOfConfig":"32"},{"size":75,"mtime":1618057965524,"results":"40","hashOfConfig":"32"},{"size":226,"mtime":1618166767131,"results":"41","hashOfConfig":"32"},{"size":337,"mtime":1619881602473,"results":"42","hashOfConfig":"32"},{"size":4663,"mtime":1624898052692,"results":"43","hashOfConfig":"32"},{"size":1293,"mtime":1620199887147,"results":"44","hashOfConfig":"32"},{"size":7748,"mtime":1624898621998,"results":"45","hashOfConfig":"32"},{"size":329,"mtime":1619879703251,"results":"46","hashOfConfig":"32"},{"size":1752,"mtime":1620200103227,"results":"47","hashOfConfig":"32"},{"size":584,"mtime":1623687378196,"results":"48","hashOfConfig":"32"},{"size":3705,"mtime":1627194277543,"results":"49","hashOfConfig":"32"},{"size":479,"mtime":1623435733152,"results":"50","hashOfConfig":"32"},{"size":519,"mtime":1627194052349,"results":"51","hashOfConfig":"32"},{"size":567,"mtime":1624988847094,"results":"52","hashOfConfig":"32"},{"size":5352,"mtime":1625248994705,"results":"53","hashOfConfig":"32"},{"size":6118,"mtime":1625247267408,"results":"54","hashOfConfig":"32"},{"size":6668,"mtime":1625247267410,"results":"55","hashOfConfig":"32"},{"size":8422,"mtime":1625247267378,"results":"56","hashOfConfig":"32"},{"size":22199,"mtime":1625076040988,"results":"57","hashOfConfig":"32"},{"size":5748,"mtime":1627202037707,"results":"58","hashOfConfig":"32"},{"size":12004,"mtime":1625072650018,"results":"59","hashOfConfig":"32"},{"size":1790,"mtime":1625078585015,"results":"60","hashOfConfig":"32"},{"size":4636,"mtime":1625244404205,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1cng5o7",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},"C:\\FYP\\Ecommerse\\frontend\\src\\index.js",[],["134","135"],"C:\\FYP\\Ecommerse\\frontend\\src\\App.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\Routes.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\core\\Home.js",["136","137","138"],"C:\\FYP\\Ecommerse\\frontend\\src\\user\\Signin.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\user\\Signup.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\core\\Menu.js",["139","140","141"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Nav, NavbarBrand, NavItem } from \"reactstrap\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../config\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport NavbarLogo from \"../assets/img/Capture.PNG\";\r\nimport { HiShoppingCart } from \"react-icons/hi\";\r\nimport { AppStateContext } from \"../context/AppStateProvider\";\r\nimport SearchBar from \"material-ui-search-bar\";\r\n\r\nconst isActive = (history, path) => {\r\n  if (history.location.pathname === path) {\r\n    return \"#ff9900\";\r\n  } else {\r\n    return \"aliceblue\";\r\n  }\r\n};\r\n\r\nconst Menu = ({ history }) => {\r\n  const [cartItems, setCartItems] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { cartChanged, setCartChanged, setSearchedProducts } =\r\n    useContext(AppStateContext);\r\n  const handleSignOut = async () => {\r\n    try {\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"user\");\r\n      localStorage.removeItem(\"cart\");\r\n      setCartItems(0);\r\n      const response = await axios.get(API + \"/signout\");\r\n      if (response.data.systemMessageType === \"success\") {\r\n        NotificationManager.success(\r\n          \"You have successfully logged out\",\r\n          \"Success\",\r\n          3000\r\n        );\r\n      } else {\r\n        NotificationManager.error(response.data.systemMessage, \"Error\", 3000);\r\n      }\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        error.response.data.systemMessage,\r\n        \"Error\",\r\n        3000\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      if (localStorage.getItem(\"cart\")) {\r\n        const cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n        console.log(cart);\r\n        setCartItems(cart.length);\r\n        if (cartChanged) {\r\n          const user = JSON.parse(localStorage.getItem(\"user\"));\r\n          user.history[0].cart = cart;\r\n          localStorage.setItem(\"user\", JSON.stringify(user));\r\n          console.log({ history: [...user.history] });\r\n          axios.put(\r\n            `${API}/user/${user._id}`,\r\n            { history: [...user.history] },\r\n            {\r\n              headers: {\r\n                Authorization: `${localStorage.getItem(\"token\")}`,\r\n              },\r\n            }\r\n          );\r\n          console.log(\"cart updated in database\");\r\n        }\r\n      }\r\n    }\r\n    setCartChanged(false);\r\n  }, [[], cartChanged]);\r\n\r\n  return (\r\n    <Navbar\r\n      collapseOnSelect\r\n      expand=\"lg\"\r\n      variant=\"dark\"\r\n      className=\"navbar-custom\"\r\n    >\r\n      <NavbarBrand href=\"/\">\r\n        <img src={NavbarLogo} height=\"50px\" />\r\n      </NavbarBrand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse\r\n        id=\"responsive-navbar-nav\"\r\n        style={{ justifyContent: \"flex-end\" }}\r\n      >\r\n        <Nav>\r\n          <NavItem>\r\n            <SearchBar\r\n              value={search}\r\n              onChange={(newValue) => setSearch(newValue)}\r\n              onRequestSearch={async () => {\r\n                if (search) {\r\n                  const response = await axios.get(\r\n                    `${API}/products/search?search=${search}`\r\n                  );\r\n                  setSearchedProducts(response.data);\r\n                  history.push(\"/product/search/result\");\r\n                  console.log(response);\r\n                }\r\n              }}\r\n            />\r\n          </NavItem>\r\n          <NavItem className=\"item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/home\"\r\n              style={{ color: isActive(history, \"/home\") }}\r\n            >\r\n              Home\r\n            </Link>\r\n          </NavItem>\r\n\r\n          {!isAuthenticated() ? (\r\n            <>\r\n              <NavItem className=\"item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/signin\"\r\n                  style={{ color: isActive(history, \"/signin\") }}\r\n                >\r\n                  Sign In\r\n                </Link>\r\n              </NavItem>\r\n              <NavItem className=\"item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/signup\"\r\n                  style={{ color: isActive(history, \"/signup\") }}\r\n                >\r\n                  Sign Up\r\n                </Link>\r\n              </NavItem>\r\n            </>\r\n          ) : (\r\n            <>\r\n              {JSON.parse(localStorage.getItem(\"user\")).role !== 0 && (\r\n                <NavItem className=\"item\">\r\n                  <Link\r\n                    className=\"nav-link\"\r\n                    to=\"/admin/dashboard\"\r\n                    style={{ color: isActive(history, \"/admin/dashboard\") }}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                </NavItem>\r\n              )}\r\n              <NavItem className=\"item\">\r\n                <Link className=\"nav-link\" to=\"/signin\" onClick={handleSignOut}>\r\n                  SignOut\r\n                </Link>\r\n              </NavItem>\r\n              {JSON.parse(localStorage.getItem(\"user\")).role === 0 && (\r\n                <NavItem className=\"item\">\r\n                  <Link\r\n                    className=\"nav-link\"\r\n                    to=\"/shop/register\"\r\n                    style={{ color: isActive(history, \"/shop/register\") }}\r\n                  >\r\n                    Create Shop\r\n                  </Link>\r\n                </NavItem>\r\n              )}\r\n              <NavItem className=\"item\">\r\n                <Link className=\"nav-link\" to=\"/cart\">\r\n                  <HiShoppingCart fill={isActive(history, \"/cart\")} size={30} />\r\n                  <sup>\r\n                    <small\r\n                      style={{ color: isActive(history, \"/cart\") }}\r\n                      className=\"cart-badge\"\r\n                    >\r\n                      {cartItems}\r\n                    </small>\r\n                  </sup>\r\n                </Link>\r\n              </NavItem>\r\n            </>\r\n          )}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default withRouter(Menu);\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\config.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\assets\\css\\CssVariables.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\auth\\index.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\components\\ServeImage.js",["142"],"import React from \"react\";\r\nimport { API } from \"../config\";\r\n\r\nconst ServeImage = ({ item, type, style }) => {\r\n  return (\r\n    <div className=\"product-image\">\r\n      <img\r\n        src={`${API}/${type}/photo/${item._id}`}\r\n        style={{\r\n          ...style,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServeImage;\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\core\\ProductsByCategory.js",["143","144","145","146"],"import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../config\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport Slider from \"react-rangeslider\";\r\nimport \"react-rangeslider/lib/index.css\";\r\nimport Select from \"react-select\";\r\n\r\nconst ProductsByCategory = (props) => {\r\n  const category = props.location.state.category;\r\n  const [products, setProducts] = useState(null);\r\n  const [filteredProducts, setFilteredProducts] = useState(null);\r\n  const [pincodeFilteredProducts, setPincodeFilteredProducts] = useState(null);\r\n  const [volume, setVolume] = useState(0);\r\n  const [pincodeOptions, setPincodeOptions] = useState([]);\r\n  const [selectedPincode, setSelectedPinCode] = useState([\r\n    { value: 0, label: \"All\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await axios.get(\r\n        `${API}/products/category/${category._id}`\r\n      );\r\n      setProducts(response.data);\r\n      setFilteredProducts(response.data);\r\n      setPincodeFilteredProducts(response.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await axios.get(`${API}/shops`);\r\n      let temp = [];\r\n      response.data.map((shop) => {\r\n        temp.push(shop.pincode);\r\n      });\r\n      temp = Array.from(new Set(temp));\r\n      const secTemp = [{ value: 0, label: \"All\" }];\r\n      temp.map((pincode) => {\r\n        secTemp.push({ value: pincode, label: pincode });\r\n      });\r\n      setPincodeOptions([...secTemp]);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function filterProducts(product) {\r\n    return product.price <= this;\r\n  }\r\n\r\n  const handleOnChange = (value) => {\r\n    console.log(value);\r\n    setVolume(value);\r\n  };\r\n\r\n  function filterPincode(product) {\r\n    return product.shop.pincode === this.value;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (products !== null && products !== []) {\r\n      if (selectedPincode.value !== 0) {\r\n        const temp = products.filter(filterPincode, selectedPincode);\r\n        setPincodeFilteredProducts([...temp]);\r\n        setFilteredProducts([...temp]);\r\n        setVolume(0);\r\n      } else {\r\n        setPincodeFilteredProducts([...products]);\r\n        setFilteredProducts([...products]);\r\n        setVolume(0);\r\n      }\r\n    }\r\n  }, [selectedPincode]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {filteredProducts && (\r\n        <Container>\r\n          <Row>\r\n            <Col sm={12}>\r\n              <h1 className=\"product-by-category-heading\">{category.name}</h1>\r\n            </Col>\r\n            <Col md={{ span: 4, offset: 8 }}>\r\n              <h5 className=\"filter-heading\">Price</h5>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Select\r\n                id=\"shop\"\r\n                className=\"category-select\"\r\n                name=\"shop\"\r\n                placeholder=\"Select Shop\"\r\n                value={selectedPincode}\r\n                onChange={(selected) => setSelectedPinCode(selected)}\r\n                options={pincodeOptions}\r\n              />\r\n            </Col>\r\n            <Col md={{ span: 4, offset: 4 }} style={{ marginBottom: 10 }}>\r\n              <Slider\r\n                style={{ background: \"white\" }}\r\n                value={volume}\r\n                min={0}\r\n                max={2000}\r\n                step={100}\r\n                orientation=\"horizontal\"\r\n                onChange={handleOnChange}\r\n                onChangeComplete={() => {\r\n                  const temp = pincodeFilteredProducts.filter(\r\n                    filterProducts,\r\n                    volume\r\n                  );\r\n                  setFilteredProducts(temp);\r\n                }}\r\n              />\r\n            </Col>\r\n            {filteredProducts.length > 0 ? (\r\n              <>\r\n                {filteredProducts.map((product, index) => (\r\n                  <Col key={index} sm={12} style={{ marginBottom: 30 }}>\r\n                    <ProductCard product={product} />\r\n                  </Col>\r\n                ))}\r\n              </>\r\n            ) : (\r\n              <Container>\r\n                <Row>\r\n                  <Col>\r\n                    <h3 style={{ textAlign: \"center\", color: \"white\" }}>\r\n                      Sorry, no items match your filter. <br /> Please try\r\n                      again.\r\n                    </h3>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            )}\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProductsByCategory);\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\core\\CategoryCard.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\core\\ProductCard.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\components\\ServeBackgroundImage.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\core\\Footer.js",["147"],"import React from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport COLORS from \"../assets/css/CssVariables\";\r\nimport NavbarLogo from \"../assets/img/Capture.PNG\";\r\nimport { FaFacebookF } from \"react-icons/fa\";\r\nimport { GrInstagram } from \"react-icons/gr\";\r\nimport { AiOutlineTwitter } from \"react-icons/ai\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ backgroundColor: COLORS.THEME_COLOR }}>\r\n        <Container style={{ paddingTop: 70, paddingBottom: 70 }}>\r\n          <Row>\r\n            <Col sm={3} style={{ textAlign: \"center\", alignSelf: \"center\" }}>\r\n              <img src={NavbarLogo} height={80} />\r\n            </Col>\r\n            <Col sm={3}>\r\n              <h3 className=\"footer-heading\">Contact us:</h3>\r\n              <h5 className=\"footer\">+91-9834693773</h5>\r\n              <h5 className=\"footer\">info@bookyourbooks.com</h5>\r\n              <h5 className=\"footer\">Company Address</h5>\r\n            </Col>\r\n            <Col sm={3}>\r\n              <h3 className=\"footer-heading\">Useful Links</h3>\r\n              <h5 className=\"footer\">Novels</h5>\r\n              <h5 className=\"footer\">Engineering</h5>\r\n              <h5 className=\"footer\">Exam Central</h5>\r\n            </Col>\r\n            <Col sm={3}>\r\n              <h3 className=\"footer-heading\">Social Media</h3>\r\n              <FaFacebookF fill=\"white\" size={30} />\r\n              <GrInstagram\r\n                fill=\"white\"\r\n                size={30}\r\n                style={{ marginLeft: 20, marginRight: 20 }}\r\n              />\r\n              <AiOutlineTwitter fill=\"white\" size={30} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\core\\SuccessfulPayment.js",["148"],"import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport paymentSuccess from \"../assets/img/paymentsuccess.png\";\r\n\r\nconst SuccessfulPayment = ({ history }) => {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col md={{ span: 8, offset: 3 }}>\r\n          <img\r\n            src={paymentSuccess}\r\n            width=\"75%\"\r\n            style={{ marginTop: 50, marginBottom: 50 }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(SuccessfulPayment);\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\core\\Cart.js",["149","150","151","152"],"C:\\FYP\\Ecommerse\\frontend\\src\\core\\FailedPayment.js",["153"],"import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport paymentFailed from \"../assets/img/paymentfailed.png\";\r\n\r\nconst FailedPayment = ({ history }) => {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col md={{ span: 8, offset: 3 }}>\r\n          <img src={paymentFailed} width=\"75%\" />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(FailedPayment);\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\context\\AppStateProvider.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\auth\\AdminRoute.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\admin\\Dashboard.js",["154","155","156","157"],"import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Card, Row, Col, Container } from \"react-bootstrap\";\r\nimport { FaListAlt, FaBook, FaTemperatureLow } from \"react-icons/fa\";\r\nimport { GrUserManager, GrView } from \"react-icons/gr\";\r\nimport BarChart from \"./charts/BarChart\";\r\nimport { API } from \"../config\";\r\nimport axios from \"axios\";\r\n\r\nconst Dashboard = ({ history }) => {\r\n  const [quantityArray, setQuantityArray] = useState([]);\r\n  const [soldArray, setSoldArray] = useState([]);\r\n  const [productName, setProductName] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    const sTemp = [];\r\n    const qTemp = [];\r\n    const temp = [];\r\n    if (JSON.parse(localStorage.getItem(\"user\")).role === 1) {\r\n      const response = await axios.get(\r\n        `${API}/products/shop/${JSON.parse(localStorage.getItem(\"shop\"))._id}`\r\n      );\r\n      response.data.map((product) => {\r\n        sTemp.push(product.sold);\r\n        qTemp.push(product.quantity);\r\n        temp.push(product.name);\r\n      });\r\n    } else {\r\n      const response = await axios.get(`${API}/products?limit=undefined`);\r\n      response.data.map((product) => {\r\n        sTemp.push(product.sold);\r\n        qTemp.push(product.quantity);\r\n        temp.push(product.name);\r\n      });\r\n    }\r\n    setQuantityArray([...qTemp]);\r\n    setProductName([...temp]);\r\n    setSoldArray([...sTemp]);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <h1 className=\"admin-dashboard-heading\">Admin Links</h1>\r\n        </Col>\r\n        {JSON.parse(localStorage.getItem(\"user\")).role === 2 && (\r\n          <Col\r\n            sm={12}\r\n            md={6}\r\n            style={{\r\n              marginTop: 20,\r\n              marginBottom: 20,\r\n              textAlign: \"-webkit-center\",\r\n            }}\r\n          >\r\n            <Card\r\n              style={{ backgroundColor: \"#dee1e3\", width: \"80%\" }}\r\n              className=\"dashboard-card\"\r\n              onClick={() => history.push(\"/admin/create/category\")}\r\n            >\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <FaListAlt fill=\"#131921\" size={35} />\r\n                    <div className=\"dashboard-card-text\">Create Category</div>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        )}\r\n        <Col\r\n          sm={12}\r\n          md={6}\r\n          style={{\r\n            marginTop: 20,\r\n            marginBottom: 20,\r\n            textAlign: \"-webkit-center\",\r\n          }}\r\n        >\r\n          <Card\r\n            style={{ backgroundColor: \"#dee1e3\", width: \"80%\" }}\r\n            className=\"dashboard-card\"\r\n            onClick={() => history.push(\"/admin/create/product\")}\r\n          >\r\n            <Card.Body>\r\n              <Row>\r\n                <Col style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <FaBook fill=\"#131921\" size={35} />\r\n                  <div className=\"dashboard-card-text\">Create Product</div>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col\r\n          sm={12}\r\n          md={6}\r\n          style={{\r\n            marginTop: 20,\r\n            marginBottom: 20,\r\n            textAlign: \"-webkit-center\",\r\n          }}\r\n        >\r\n          <Card\r\n            style={{ backgroundColor: \"#dee1e3\", width: \"80%\" }}\r\n            className=\"dashboard-card\"\r\n            onClick={() => history.push(\"/admin/manage/products\")}\r\n          >\r\n            <Card.Body>\r\n              <Row>\r\n                <Col style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <GrUserManager fill=\"#131921\" size={35} />\r\n                  <div className=\"dashboard-card-text\">Manage Product</div>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        {JSON.parse(localStorage.getItem(\"user\")).role === 2 && (\r\n          <Col\r\n            sm={12}\r\n            md={6}\r\n            style={{\r\n              marginTop: 20,\r\n              marginBottom: 20,\r\n              textAlign: \"-webkit-center\",\r\n            }}\r\n          >\r\n            <Card\r\n              style={{ backgroundColor: \"#dee1e3\", width: \"80%\" }}\r\n              className=\"dashboard-card\"\r\n              onClick={() =>\r\n                window.open(\"https://dashboard.stripe.com/login\", \"_blank\")\r\n              }\r\n            >\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <GrView fill=\"#131921\" size={35} />\r\n                    <div className=\"dashboard-card-text\">View Orders</div>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        )}\r\n        {soldArray.length > 0 && quantityArray.length > 0 && (\r\n          <Col xs={12}>\r\n            <Card style={{ backgroundColor: \"#dee1e3\" }}>\r\n              <BarChart\r\n                sold={soldArray}\r\n                quantity={quantityArray}\r\n                name={productName}\r\n              />\r\n            </Card>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Dashboard);\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\core\\ForgotPassword.js",["158"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Form, Formik, ErrorMessage } from \"formik\";\r\nimport { Mail } from \"react-feather\";\r\n\r\nimport \"../global.scss\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport COLORS from \"../assets/css/CssVariables\";\r\nimport { API } from \"../config\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst ForgotPassword = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"my-5\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col xl={10}>\r\n              <Card className=\"\">\r\n                <CardBody className=\"p-0\">\r\n                  <Row>\r\n                    <Col md={6} className=\"p-5 position-relative\">\r\n                      <div className=\"mx-auto mb-5\">\r\n                        <h3 className=\"d-inline align-middle ml-1 text-logo\">\r\n                          Forgot Password\r\n                        </h3>\r\n                      </div>\r\n\r\n                      <h6 className=\"h5 mb-0 mt-4\">Welcome back!</h6>\r\n                      <p className=\"text-muted mt-1 mb-4\">\r\n                        Enter your email address and follow the instructions to\r\n                        recover your account\r\n                      </p>\r\n                      <Formik\r\n                        initialValues={{\r\n                          email: \"\",\r\n                        }}\r\n                        validationSchema={Yup.object().shape({\r\n                          email: Yup.string()\r\n                            .required(\"Email is required\")\r\n                            .email(\"Enter a valid email\"),\r\n                        })}\r\n                        onSubmit={async (values, actions) => {\r\n                          try {\r\n                            const response = await axios.post(\r\n                              API + \"/forgot-password\",\r\n                              {\r\n                                email: values.email,\r\n                              }\r\n                            );\r\n                            console.log(response);\r\n                            if (response.data.systemMessageType === \"success\") {\r\n                              NotificationManager.success(\r\n                                response.data.systemMessage,\r\n                                \"Success\",\r\n                                3000\r\n                              );\r\n                            } else {\r\n                              NotificationManager.error(\r\n                                response.data.systemMessage,\r\n                                \"Error\",\r\n                                3000\r\n                              );\r\n                            }\r\n                          } catch (error) {\r\n                            NotificationManager.error(\r\n                              error.response.data.systemMessage,\r\n                              \"Error\",\r\n                              3000\r\n                            );\r\n                          }\r\n                        }}\r\n                        render={({ values, handleChange }) => (\r\n                          <Form>\r\n                            <FormGroup className=\"\">\r\n                              <Label for=\"username\">Email ID</Label>\r\n                              <InputGroup>\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                  <span className=\"input-group-text\">\r\n                                    <Mail className=\"icon-dual\" />\r\n                                  </span>\r\n                                </InputGroupAddon>\r\n                                <Input\r\n                                  onChange={handleChange}\r\n                                  name=\"email\"\r\n                                  id=\"username\"\r\n                                  placeholder=\"hello@coderthemes.com\"\r\n                                />\r\n                              </InputGroup>\r\n                              <ErrorMessage\r\n                                name={\"email\"}\r\n                                className=\"error\"\r\n                                component=\"div\"\r\n                              />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup className=\"form-group mb-0 text-center\">\r\n                              <Button\r\n                                style={{\r\n                                  background: COLORS.THEME_COLOR,\r\n                                  width: \"100%\",\r\n                                }}\r\n                                // onClick={this.SuperAdminHandler}\r\n                              >\r\n                                Recover Account\r\n                              </Button>\r\n                            </FormGroup>\r\n                          </Form>\r\n                        )}\r\n                      />\r\n                      {/* <p className=\"mt-3\">\r\n                        <strong>Username:</strong> test &nbsp;&nbsp;{\" \"}\r\n                        <strong>Password:</strong> test\r\n                      </p> */}\r\n                    </Col>\r\n\r\n                    <Col md={6} className=\"d-none d-md-inline-block\">\r\n                      <div className=\"auth-page-sidebar\">\r\n                        <div className=\"overlay\"></div>\r\n                        <div className=\"auth-user-testimonial\">\r\n                          {/* <p className=\"lead\">\r\n                            \"It's a elegent templete. I love it very much!\"\r\n                          </p> */}\r\n                          {/* <p>- Admin User</p> */}\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\core\\ResetPassword.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\admin\\CategoryDetails.js",["159"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Form, Formik, ErrorMessage } from \"formik\";\r\nimport { ShoppingBag } from \"react-feather\";\r\nimport \"../global.scss\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport COLORS from \"../assets/css/CssVariables\";\r\nimport { API } from \"../config\";\r\nimport * as Yup from \"yup\";\r\nimport { IoImageOutline } from \"react-icons/io5\";\r\n\r\nconst CreateCategory = ({ history }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"my-5\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col xl={10}>\r\n              <Card className=\"\">\r\n                <CardBody className=\"p-0\">\r\n                  <Row style={{ justifyContent: \"center\" }}>\r\n                    <Col md={6} className=\"p-5 position-relative\">\r\n                      <div className=\"mx-auto mb-5\">\r\n                        <h3 className=\"d-inline align-middle ml-1 text-logo\">\r\n                          Create Category\r\n                        </h3>\r\n                      </div>\r\n\r\n                      <h6 className=\"h5 mb-0 mt-4\">Hey There!</h6>\r\n                      <p className=\"text-muted mt-1 mb-4\">\r\n                        Create a category so that you could add books to it\r\n                        later.\r\n                      </p>\r\n                      <Formik\r\n                        initialValues={{\r\n                          name: \"\",\r\n                          image: \"\",\r\n                          photo: null,\r\n                        }}\r\n                        validationSchema={Yup.object().shape({\r\n                          name: Yup.string().required(\r\n                            \"Category name is required\"\r\n                          ),\r\n                          image: Yup.string().required(\"Image is required\"),\r\n                        })}\r\n                        onSubmit={async (values, actions) => {\r\n                          const user = JSON.parse(localStorage.getItem(\"user\"));\r\n                          const token = localStorage.getItem(\"token\");\r\n                          let formData = new FormData();\r\n                          formData.append(\"name\", values.name);\r\n                          formData.append(\"photo\", values.photo);\r\n                          try {\r\n                            const response = await axios.post(\r\n                              API + `/category/create/${user._id}`,\r\n                              formData,\r\n                              {\r\n                                headers: {\r\n                                  Authorization: token,\r\n                                },\r\n                              }\r\n                            );\r\n                            if (response.data.systemMessageType === \"success\") {\r\n                              history.push(\"/admin/create/product\");\r\n                              NotificationManager.success(\r\n                                \"Successfully created category. Now you can add Products to it.\",\r\n                                \"Success\",\r\n                                3000\r\n                              );\r\n                            } else {\r\n                              NotificationManager.error(\r\n                                response.data.systemMessage,\r\n                                \"Error\",\r\n                                3000\r\n                              );\r\n                            }\r\n                          } catch (error) {\r\n                            NotificationManager.error(\r\n                              error.response.data.systemMessage,\r\n                              \"Error\",\r\n                              3000\r\n                            );\r\n                          }\r\n                        }}\r\n                        render={({ values, handleChange, setFieldValue }) => (\r\n                          <Form style={{ width: \"100%\" }}>\r\n                            <FormGroup className=\"\">\r\n                              <Label for=\"image\">Category Image</Label>\r\n                              <InputGroup>\r\n                                <Label for=\"image\" style={{ width: \"100%\" }}>\r\n                                  {values.image === \"\" ? (\r\n                                    <IoImageOutline\r\n                                      size={50}\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                    />\r\n                                  ) : (\r\n                                    <img src={values.image} width=\"100%\" />\r\n                                  )}\r\n                                </Label>\r\n                                <Input\r\n                                  type=\"file\"\r\n                                  onChange={(event) => {\r\n                                    if (event.target.files.length > 0) {\r\n                                      setFieldValue(\r\n                                        \"image\",\r\n                                        URL.createObjectURL(\r\n                                          event.target.files[0]\r\n                                        )\r\n                                      );\r\n                                      setFieldValue(\r\n                                        \"photo\",\r\n                                        event.target.files[0]\r\n                                      );\r\n                                    }\r\n                                  }}\r\n                                  accept=\"image/*\"\r\n                                  name=\"image\"\r\n                                  id=\"image\"\r\n                                  style={{ display: \"none\" }}\r\n                                />\r\n                              </InputGroup>\r\n                              <ErrorMessage\r\n                                name={\"image\"}\r\n                                className=\"error\"\r\n                                component=\"div\"\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup className=\"\">\r\n                              <Label for=\"username\">Category Name</Label>\r\n                              <InputGroup>\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                  <span className=\"input-group-text\">\r\n                                    <ShoppingBag className=\"icon-dual\" />\r\n                                  </span>\r\n                                </InputGroupAddon>\r\n                                <Input\r\n                                  onChange={handleChange}\r\n                                  name=\"name\"\r\n                                  id=\"username\"\r\n                                  placeholder=\"Category Name\"\r\n                                />\r\n                              </InputGroup>\r\n                              <ErrorMessage\r\n                                name={\"name\"}\r\n                                className=\"error\"\r\n                                component=\"div\"\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup className=\"form-group mb-0 text-center\">\r\n                              <Button\r\n                                style={{\r\n                                  background: COLORS.THEME_COLOR,\r\n                                  width: \"100%\",\r\n                                }}\r\n                                // onClick={this.SuperAdminHandler}\r\n                              >\r\n                                Create Category\r\n                              </Button>\r\n                            </FormGroup>\r\n                          </Form>\r\n                        )}\r\n                      />\r\n                      {/* <p className=\"mt-3\">\r\n                        <strong>Username:</strong> test &nbsp;&nbsp;{\" \"}\r\n                        <strong>Password:</strong> test\r\n                      </p> */}\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(CreateCategory);\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\admin\\ProductDetails.js",["160","161","162","163","164","165"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Form, Formik, ErrorMessage } from \"formik\";\r\nimport { Book, Tag, User } from \"react-feather\";\r\nimport \"../global.scss\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport COLORS from \"../assets/css/CssVariables\";\r\nimport { API } from \"../config\";\r\nimport * as Yup from \"yup\";\r\nimport { IoImageOutline } from \"react-icons/io5\";\r\nimport Select from \"react-select\";\r\n\r\nconst ProductDetails = ({ history, location }) => {\r\n  const [categoryOptions, setCategoryOptions] = useState([]);\r\n  const [shopOptions, setShopOptions] = useState([]);\r\n  const [productImage, setProductImage] = useState(\"\");\r\n  const [productBinaryPhoto, setProductBinaryPhoto] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    function dataURLtoFile(dataurl, filename) {\r\n      var arr = dataurl.split(\",\"),\r\n        mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[1]),\r\n        n = bstr.length,\r\n        u8arr = new Uint8Array(n);\r\n\r\n      while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n      }\r\n\r\n      return new File([u8arr], filename, { type: mime });\r\n    }\r\n\r\n    function getBase64(url) {\r\n      return axios\r\n        .get(url, {\r\n          responseType: \"arraybuffer\",\r\n        })\r\n        .then((response) => {\r\n          setProductImage(\r\n            `data:image/jpeg;base64,${Buffer.from(\r\n              response.data,\r\n              \"binary\"\r\n            ).toString(\"base64\")}`\r\n          );\r\n          setProductBinaryPhoto(\r\n            dataURLtoFile(\r\n              `data:image/jpeg;base64,${Buffer.from(\r\n                response.data,\r\n                \"binary\"\r\n              ).toString(\"base64\")}`,\r\n              \"hello.png\"\r\n            )\r\n          );\r\n        });\r\n    }\r\n    if (location.state) {\r\n      getBase64(`${API}/product/photo/${location.state.data._id}`);\r\n    }\r\n  }, []);\r\n\r\n  console.log(productBinaryPhoto);\r\n\r\n  useEffect(async () => {\r\n    const response = await axios.get(`${API}/categories`);\r\n    const temp = [];\r\n    if (response.data) {\r\n      response.data.map((category) => {\r\n        temp.push({ _id: category._id, name: category.name });\r\n      });\r\n    }\r\n    setCategoryOptions([...temp]);\r\n  }, []);\r\n\r\n  useEffect(async () => {\r\n    const response = await axios.get(`${API}/shops`);\r\n    const temp = [];\r\n    if (response.data) {\r\n      response.data.map((shop) => {\r\n        temp.push({ _id: shop._id, name: shop.name });\r\n      });\r\n    }\r\n    setShopOptions([...temp]);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"my-5\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col xl={10}>\r\n              <Card className=\"\">\r\n                <CardBody className=\"p-0\">\r\n                  <Row style={{ justifyContent: \"center\" }}>\r\n                    <Col md={6} className=\"p-5 position-relative\">\r\n                      <div className=\"mx-auto mb-5\">\r\n                        <h3 className=\"d-inline align-middle ml-1 text-logo\">\r\n                          {location.state ? \"Update Product\" : \"Create Product\"}\r\n                        </h3>\r\n                      </div>\r\n\r\n                      <h6 className=\"h5 mb-0 mt-4\">Hey There!</h6>\r\n                      <p className=\"text-muted mt-1 mb-4\">\r\n                        {location.state\r\n                          ? \"Please update the selected product.\"\r\n                          : \"Create a product so that your customers can buy that.\"}\r\n                      </p>\r\n                      <Formik\r\n                        initialValues={{\r\n                          name: location.state ? location.state.data.name : \"\",\r\n                          description: location.state\r\n                            ? location.state.data.description\r\n                            : \"\",\r\n                          price: location.state\r\n                            ? location.state.data.price\r\n                            : \"\",\r\n                          category: location.state\r\n                            ? location.state.data.category\r\n                            : \"\",\r\n                          shop: location.state\r\n                            ? location.state.data.shop\r\n                            : localStorage.getItem(\"shop\")\r\n                            ? JSON.parse(localStorage.getItem(\"shop\"))\r\n                            : \"\",\r\n                          shipping: true,\r\n                          quantity: location.state\r\n                            ? location.state.data.quantity\r\n                            : \"\",\r\n                          author: location.state\r\n                            ? location.state.data.author\r\n                            : \"\",\r\n                          sold: location.state ? location.state.data.sold : 0,\r\n                        }}\r\n                        validationSchema={Yup.object().shape({\r\n                          name: Yup.string().required(\r\n                            \"Category name is required\"\r\n                          ),\r\n                          description: Yup.string().required(\r\n                            \"Product description is required\"\r\n                          ),\r\n\r\n                          price: Yup.number()\r\n                            .typeError(\"Product price must be a number\")\r\n                            .required(\"Product price is required\"),\r\n                          category: Yup.object()\r\n                            .typeError(\"Please select a category\")\r\n                            .required(\"Please select a category\"),\r\n                          shop: Yup.object()\r\n                            .typeError(\"Please select a shop\")\r\n                            .required(\"Please select a shop\"),\r\n                          quantity: Yup.number()\r\n                            .typeError(\"Product price must be a number\")\r\n                            .required(\"Product quantity is required\"),\r\n                          author: Yup.string().required(\"Author is required\"),\r\n                        })}\r\n                        onSubmit={async (values, actions) => {\r\n                          console.log(\"Gurjeet\");\r\n                          const user = JSON.parse(localStorage.getItem(\"user\"));\r\n                          const token = localStorage.getItem(\"token\");\r\n                          let formData = new FormData();\r\n                          formData.append(\"name\", values.name);\r\n                          formData.append(\"photo\", productBinaryPhoto);\r\n                          formData.append(\"description\", values.description);\r\n                          formData.append(\"price\", values.price);\r\n                          formData.append(\"category\", values.category._id);\r\n                          formData.append(\"shop\", values.shop._id);\r\n                          formData.append(\"shipping\", values.shipping);\r\n                          formData.append(\"quantity\", values.quantity);\r\n                          formData.append(\"author\", values.author);\r\n                          formData.append(\"sold\", values.sold);\r\n\r\n                          if (location.state) {\r\n                            console.log(\"Gurjeet\");\r\n                            try {\r\n                              const response = await axios.put(\r\n                                API +\r\n                                  `/product/${location.state.data._id}/${user._id}`,\r\n                                formData,\r\n                                {\r\n                                  headers: {\r\n                                    Authorization: token,\r\n                                  },\r\n                                }\r\n                              );\r\n                              console.log(response);\r\n                              if (\r\n                                response.data.systemMessageType === \"success\"\r\n                              ) {\r\n                                NotificationManager.success(\r\n                                  \"Successfully updated product.\",\r\n                                  \"Success\",\r\n                                  3000\r\n                                );\r\n                              } else {\r\n                                NotificationManager.error(\r\n                                  response.data.systemMessage,\r\n                                  \"Error\",\r\n                                  3000\r\n                                );\r\n                              }\r\n                            } catch (error) {\r\n                              NotificationManager.error(\r\n                                error.response.data.systemMessage,\r\n                                \"Error\",\r\n                                3000\r\n                              );\r\n                            }\r\n                          } else {\r\n                            try {\r\n                              const response = await axios.post(\r\n                                API + `/product/create/${user._id}`,\r\n                                formData,\r\n                                {\r\n                                  headers: {\r\n                                    Authorization: token,\r\n                                  },\r\n                                }\r\n                              );\r\n                              console.log(response);\r\n                              if (\r\n                                response.data.systemMessageType === \"success\"\r\n                              ) {\r\n                                NotificationManager.success(\r\n                                  \"Successfully created product.\",\r\n                                  \"Success\",\r\n                                  3000\r\n                                );\r\n                              } else {\r\n                                NotificationManager.error(\r\n                                  response.data.systemMessage,\r\n                                  \"Error\",\r\n                                  3000\r\n                                );\r\n                              }\r\n                            } catch (error) {\r\n                              NotificationManager.error(\r\n                                error.response.data.systemMessage,\r\n                                \"Error\",\r\n                                3000\r\n                              );\r\n                            }\r\n                          }\r\n                        }}\r\n                        render={({ values, handleChange, setFieldValue }) => (\r\n                          <Form style={{ width: \"100%\" }}>\r\n                            <FormGroup className=\"\">\r\n                              <Label for=\"image\">Product Image</Label>\r\n                              <InputGroup>\r\n                                <Label for=\"image\" style={{ width: \"100%\" }}>\r\n                                  {productImage === \"\" ? (\r\n                                    <IoImageOutline\r\n                                      size={50}\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                    />\r\n                                  ) : (\r\n                                    <img src={productImage} width=\"100%\" />\r\n                                  )}\r\n                                </Label>\r\n                                <Input\r\n                                  type=\"file\"\r\n                                  onChange={(event) => {\r\n                                    console.log(event.target.files);\r\n                                    if (event.target.files.length > 0) {\r\n                                      setProductImage(\r\n                                        URL.createObjectURL(\r\n                                          event.target.files[0]\r\n                                        )\r\n                                      );\r\n                                      setProductBinaryPhoto(\r\n                                        event.target.files[0]\r\n                                      );\r\n                                    }\r\n                                  }}\r\n                                  accept=\"image/*\"\r\n                                  name=\"image\"\r\n                                  id=\"image\"\r\n                                  style={{ display: \"none\" }}\r\n                                />\r\n                              </InputGroup>\r\n                              <ErrorMessage\r\n                                name={\"image\"}\r\n                                className=\"error\"\r\n                                component=\"div\"\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup className=\"\">\r\n                              <Label for=\"name\">Product Name</Label>\r\n                              <InputGroup>\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                  <span className=\"input-group-text\">\r\n                                    <Book className=\"icon-dual\" />\r\n                                  </span>\r\n                                </InputGroupAddon>\r\n                                <Input\r\n                                  value={values.name}\r\n                                  onChange={handleChange}\r\n                                  name=\"name\"\r\n                                  id=\"name\"\r\n                                  placeholder=\"Product Name\"\r\n                                />\r\n                              </InputGroup>\r\n                              <ErrorMessage\r\n                                name={\"name\"}\r\n                                className=\"error\"\r\n                                component=\"div\"\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup className=\"\">\r\n                              <Label for=\"author\">Product Author</Label>\r\n                              <InputGroup>\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                  <span className=\"input-group-text\">\r\n                                    <User className=\"icon-dual\" />\r\n                                  </span>\r\n                                </InputGroupAddon>\r\n                                <Input\r\n                                  value={values.author}\r\n                                  onChange={handleChange}\r\n                                  name=\"author\"\r\n                                  id=\"author\"\r\n                                  placeholder=\"Author\"\r\n                                />\r\n                              </InputGroup>\r\n                              <ErrorMessage\r\n                                name={\"author\"}\r\n                                className=\"error\"\r\n                                component=\"div\"\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup className=\"\">\r\n                              <Label for=\"description\">\r\n                                Product Description\r\n                              </Label>\r\n                              <InputGroup>\r\n                                <Input\r\n                                  value={values.description}\r\n                                  type=\"textarea\"\r\n                                  onChange={handleChange}\r\n                                  name=\"description\"\r\n                                  id=\"description\"\r\n                                />\r\n                              </InputGroup>\r\n                              <ErrorMessage\r\n                                name={\"description\"}\r\n                                className=\"error\"\r\n                                component=\"div\"\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup className=\"\">\r\n                              <Label for=\"shop\">Select Shop</Label>\r\n                              <InputGroup>\r\n                                <Select\r\n                                  id=\"shop\"\r\n                                  className=\"category-select\"\r\n                                  name=\"shop\"\r\n                                  placeholder=\"Select Shop\"\r\n                                  value={values.shop}\r\n                                  getOptionLabel={(option) => option.name}\r\n                                  getOptionValue={(option) => option._id}\r\n                                  onChange={(shop) =>\r\n                                    setFieldValue(\"shop\", shop)\r\n                                  }\r\n                                  options={shopOptions}\r\n                                  isDisabled={\r\n                                    JSON.parse(localStorage.getItem(\"user\"))\r\n                                      .role === 1\r\n                                  }\r\n                                />\r\n                              </InputGroup>\r\n                              <ErrorMessage\r\n                                name={\"shop\"}\r\n                                className=\"error\"\r\n                                component=\"div\"\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup className=\"\">\r\n                              <Label for=\"price\">Product Price</Label>\r\n                              <InputGroup>\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                  <span className=\"input-group-text\">\r\n                                    <Tag className=\"icon-dual\" />\r\n                                  </span>\r\n                                </InputGroupAddon>\r\n                                <Input\r\n                                  value={values.price}\r\n                                  onChange={handleChange}\r\n                                  name=\"price\"\r\n                                  id=\"price\"\r\n                                  placeholder=\"Product Price\"\r\n                                />\r\n                              </InputGroup>\r\n                              <ErrorMessage\r\n                                name={\"price\"}\r\n                                className=\"error\"\r\n                                component=\"div\"\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup className=\"\">\r\n                              <Label for=\"select\">Select Category</Label>\r\n                              <InputGroup>\r\n                                <Select\r\n                                  id=\"category\"\r\n                                  className=\"category-select\"\r\n                                  name=\"category\"\r\n                                  placeholder=\"Select Category\"\r\n                                  value={values.category}\r\n                                  getOptionLabel={(option) => option.name}\r\n                                  getOptionValue={(option) => option._id}\r\n                                  onChange={(category) =>\r\n                                    setFieldValue(\"category\", category)\r\n                                  }\r\n                                  options={categoryOptions}\r\n                                />\r\n                              </InputGroup>\r\n                              <ErrorMessage\r\n                                name={\"category\"}\r\n                                className=\"error\"\r\n                                component=\"div\"\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup className=\"\">\r\n                              <Label for=\"quality\">Product Quantity</Label>\r\n                              <InputGroup>\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                  <span className=\"input-group-text\">\r\n                                    <Tag className=\"icon-dual\" />\r\n                                  </span>\r\n                                </InputGroupAddon>\r\n                                <Input\r\n                                  value={values.quantity}\r\n                                  onChange={handleChange}\r\n                                  name=\"quantity\"\r\n                                  id=\"quality\"\r\n                                  placeholder=\"Product Quantity\"\r\n                                />\r\n                              </InputGroup>\r\n                              <ErrorMessage\r\n                                name={\"quantity\"}\r\n                                className=\"error\"\r\n                                component=\"div\"\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup className=\"form-group mb-0 text-center\">\r\n                              <Button\r\n                                style={{\r\n                                  background: COLORS.THEME_COLOR,\r\n                                  width: \"100%\",\r\n                                }}\r\n                                type=\"submit\"\r\n                              >\r\n                                {location.state\r\n                                  ? \"Update Product\"\r\n                                  : \"Create Product\"}\r\n                              </Button>\r\n                            </FormGroup>\r\n                          </Form>\r\n                        )}\r\n                      />\r\n                      {/* <p className=\"mt-3\">\r\n                        <strong>Username:</strong> test &nbsp;&nbsp;{\" \"}\r\n                        <strong>Password:</strong> test\r\n                      </p> */}\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProductDetails);\r\n","C:\\FYP\\Ecommerse\\frontend\\src\\admin\\ManageProducts.js",["166","167","168","169"],"C:\\FYP\\Ecommerse\\frontend\\src\\user\\ShopRegistration.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\admin\\charts\\BarChart.js",[],"C:\\FYP\\Ecommerse\\frontend\\src\\core\\SearchResult.js",["170","171","172"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../config\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport Slider from \"react-rangeslider\";\r\nimport \"react-rangeslider/lib/index.css\";\r\nimport Select from \"react-select\";\r\nimport { AppStateContext } from \"../context/AppStateProvider\";\r\n\r\nconst SearchResult = (props) => {\r\n  const [products, setProducts] = useState(null);\r\n  const [filteredProducts, setFilteredProducts] = useState(null);\r\n  const [pincodeFilteredProducts, setPincodeFilteredProducts] = useState(null);\r\n  const [volume, setVolume] = useState(0);\r\n  const [pincodeOptions, setPincodeOptions] = useState([]);\r\n  const [selectedPincode, setSelectedPinCode] = useState([\r\n    { value: 0, label: \"All\" },\r\n  ]);\r\n  const { searchedProducts } = useContext(AppStateContext);\r\n\r\n  console.log(searchedProducts);\r\n\r\n  useEffect(() => {\r\n    setProducts([...searchedProducts]);\r\n    setFilteredProducts([...searchedProducts]);\r\n    setPincodeFilteredProducts([...searchedProducts]);\r\n  }, [searchedProducts]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await axios.get(`${API}/shops`);\r\n      let temp = [];\r\n      response.data.map((shop) => {\r\n        temp.push(shop.pincode);\r\n      });\r\n      temp = Array.from(new Set(temp));\r\n      const secTemp = [{ value: 0, label: \"All\" }];\r\n      temp.map((pincode) => {\r\n        secTemp.push({ value: pincode, label: pincode });\r\n      });\r\n      setPincodeOptions([...secTemp]);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function filterProducts(product) {\r\n    return product.price <= this;\r\n  }\r\n\r\n  const handleOnChange = (value) => {\r\n    console.log(value);\r\n    setVolume(value);\r\n  };\r\n\r\n  function filterPincode(product) {\r\n    return product.shop.pincode === this.value;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (products !== null && products !== []) {\r\n      if (selectedPincode.value !== 0) {\r\n        const temp = products.filter(filterPincode, selectedPincode);\r\n        setPincodeFilteredProducts([...temp]);\r\n        setFilteredProducts([...temp]);\r\n        setVolume(0);\r\n      } else {\r\n        setPincodeFilteredProducts([...products]);\r\n        setFilteredProducts([...products]);\r\n        setVolume(0);\r\n      }\r\n    }\r\n  }, [selectedPincode]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {filteredProducts && (\r\n        <Container>\r\n          <Row>\r\n            <Col sm={12}>\r\n              <h1 className=\"product-by-category-heading\">Result</h1>\r\n            </Col>\r\n            <Col md={{ span: 4, offset: 8 }}>\r\n              <h5 className=\"filter-heading\">Price</h5>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Select\r\n                id=\"shop\"\r\n                className=\"category-select\"\r\n                name=\"shop\"\r\n                placeholder=\"Select Shop\"\r\n                value={selectedPincode}\r\n                onChange={(selected) => setSelectedPinCode(selected)}\r\n                options={pincodeOptions}\r\n              />\r\n            </Col>\r\n            <Col md={{ span: 4, offset: 4 }} style={{ marginBottom: 10 }}>\r\n              <Slider\r\n                style={{ background: \"white\" }}\r\n                value={volume}\r\n                min={0}\r\n                max={2000}\r\n                step={100}\r\n                orientation=\"horizontal\"\r\n                onChange={handleOnChange}\r\n                onChangeComplete={() => {\r\n                  const temp = pincodeFilteredProducts.filter(\r\n                    filterProducts,\r\n                    volume\r\n                  );\r\n                  setFilteredProducts(temp);\r\n                }}\r\n              />\r\n            </Col>\r\n            {filteredProducts.length > 0 ? (\r\n              <>\r\n                {filteredProducts.map((product, index) => (\r\n                  <Col key={index} sm={12} style={{ marginBottom: 30 }}>\r\n                    <ProductCard product={product} />\r\n                  </Col>\r\n                ))}\r\n              </>\r\n            ) : (\r\n              <Container>\r\n                <Row>\r\n                  <Col>\r\n                    <h3 style={{ textAlign: \"center\", color: \"white\" }}>\r\n                      Sorry, no items match your filter. <br /> Please try\r\n                      again.\r\n                    </h3>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            )}\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(SearchResult);\r\n",{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":51,"column":15,"nodeType":"179","endLine":51,"endColumn":36},{"ruleId":"177","severity":1,"message":"178","line":54,"column":15,"nodeType":"179","endLine":54,"endColumn":36},{"ruleId":"177","severity":1,"message":"178","line":57,"column":15,"nodeType":"179","endLine":57,"endColumn":36},{"ruleId":"180","severity":1,"message":"181","line":77,"column":6,"nodeType":"182","endLine":77,"endColumn":23,"suggestions":"183"},{"ruleId":"180","severity":1,"message":"184","line":77,"column":7,"nodeType":"182","endLine":77,"endColumn":9},{"ruleId":"177","severity":1,"message":"178","line":87,"column":9,"nodeType":"179","endLine":87,"endColumn":47},{"ruleId":"177","severity":1,"message":"178","line":7,"column":7,"nodeType":"179","endLine":12,"endColumn":9},{"ruleId":"180","severity":1,"message":"185","line":32,"column":6,"nodeType":"182","endLine":32,"endColumn":8,"suggestions":"186"},{"ruleId":"187","severity":1,"message":"188","line":38,"column":32,"nodeType":"189","messageId":"190","endLine":38,"endColumn":34},{"ruleId":"187","severity":1,"message":"188","line":43,"column":26,"nodeType":"189","messageId":"190","endLine":43,"endColumn":28},{"ruleId":"180","severity":1,"message":"191","line":77,"column":6,"nodeType":"182","endLine":77,"endColumn":23,"suggestions":"192"},{"ruleId":"177","severity":1,"message":"178","line":16,"column":15,"nodeType":"179","endLine":16,"endColumn":51},{"ruleId":"177","severity":1,"message":"178","line":11,"column":11,"nodeType":"179","endLine":15,"endColumn":13},{"ruleId":"193","severity":1,"message":"194","line":14,"column":10,"nodeType":"195","messageId":"196","endLine":14,"endColumn":18},{"ruleId":"193","severity":1,"message":"197","line":16,"column":10,"nodeType":"195","messageId":"196","endLine":16,"endColumn":16},{"ruleId":"193","severity":1,"message":"198","line":27,"column":12,"nodeType":"195","messageId":"196","endLine":27,"endColumn":26},{"ruleId":"193","severity":1,"message":"199","line":31,"column":9,"nodeType":"195","messageId":"196","endLine":31,"endColumn":23},{"ruleId":"177","severity":1,"message":"178","line":11,"column":11,"nodeType":"179","endLine":11,"endColumn":50},{"ruleId":"193","severity":1,"message":"200","line":4,"column":29,"nodeType":"195","messageId":"196","endLine":4,"endColumn":45},{"ruleId":"180","severity":1,"message":"201","line":15,"column":13,"nodeType":"189","endLine":39,"endColumn":4},{"ruleId":"187","severity":1,"message":"188","line":23,"column":35,"nodeType":"189","messageId":"190","endLine":23,"endColumn":37},{"ruleId":"187","severity":1,"message":"188","line":30,"column":35,"nodeType":"189","messageId":"190","endLine":30,"endColumn":37},{"ruleId":"193","severity":1,"message":"202","line":27,"column":9,"nodeType":"195","messageId":"196","endLine":27,"endColumn":16},{"ruleId":"177","severity":1,"message":"178","line":110,"column":37,"nodeType":"179","endLine":110,"endColumn":76},{"ruleId":"180","severity":1,"message":"203","line":74,"column":6,"nodeType":"182","endLine":74,"endColumn":8,"suggestions":"204"},{"ruleId":"180","severity":1,"message":"201","line":78,"column":13,"nodeType":"189","endLine":87,"endColumn":4},{"ruleId":"187","severity":1,"message":"188","line":82,"column":36,"nodeType":"189","messageId":"190","endLine":82,"endColumn":38},{"ruleId":"180","severity":1,"message":"201","line":89,"column":13,"nodeType":"189","endLine":98,"endColumn":4},{"ruleId":"187","severity":1,"message":"188","line":93,"column":32,"nodeType":"189","messageId":"190","endLine":93,"endColumn":34},{"ruleId":"177","severity":1,"message":"178","line":270,"column":37,"nodeType":"179","endLine":270,"endColumn":76},{"ruleId":"205","severity":1,"message":"206","line":112,"column":3,"nodeType":"207","messageId":"208","endLine":114,"endColumn":4},{"ruleId":"180","severity":1,"message":"201","line":128,"column":13,"nodeType":"189","endLine":147,"endColumn":4},{"ruleId":"187","severity":1,"message":"188","line":134,"column":42,"nodeType":"189","messageId":"190","endLine":134,"endColumn":44},{"ruleId":"187","severity":1,"message":"188","line":142,"column":42,"nodeType":"189","messageId":"190","endLine":142,"endColumn":44},{"ruleId":"187","severity":1,"message":"188","line":35,"column":32,"nodeType":"189","messageId":"190","endLine":35,"endColumn":34},{"ruleId":"187","severity":1,"message":"188","line":40,"column":26,"nodeType":"189","messageId":"190","endLine":40,"endColumn":28},{"ruleId":"180","severity":1,"message":"191","line":74,"column":6,"nodeType":"182","endLine":74,"endColumn":23,"suggestions":"209"},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCartChanged'. Either include it or remove the dependency array.","ArrayExpression",["212"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","React Hook useEffect has a missing dependency: 'category._id'. Either include it or remove the dependency array.",["213"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPincodeFilteredProducts' needs the current value of 'products'.",["214"],"no-unused-vars","'products' is assigned a value but never used.","Identifier","unusedVar","'volume' is assigned a value but never used.","'filterProducts' is defined but never used.","'handleOnChange' is assigned a value but never used.","'FaTemperatureLow' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.",["215"],"no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","unexpected",["216"],"no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"221","fix":"225"},"Update the dependencies array to be: [cartChanged, setCartChanged]",{"range":"226","text":"227"},"Update the dependencies array to be: [category._id]",{"range":"228","text":"229"},"Update the dependencies array to be: [products, selectedPincode]",{"range":"230","text":"231"},"Update the dependencies array to be: [location.state]",{"range":"232","text":"233"},{"range":"234","text":"231"},[2558,2575],"[cartChanged, setCartChanged]",[1193,1195],"[category._id]",[2410,2427],"[products, selectedPincode]",[2105,2107],"[location.state]",[2398,2415]]